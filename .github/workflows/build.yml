name: Build and Package

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Debian packaging tools
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Get version
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=0.0.1-$(git rev-parse --short HEAD)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build static binary
        run: |
          CGO_ENABLED=0 go build -o pkginstall -tags netgo,osusergo -ldflags "-extldflags '-static'" ./cmd/pkginstall
          chmod +x pkginstall

      - name: Verify binary is statically linked
        run: |
          ldd ./pkginstall || echo "Binary is statically linked"

      - name: Prepare package directory
        run: |
          mkdir -p ./build/usr/bin
          cp ./pkginstall ./build/usr/bin/
          mkdir -p ./build/usr/share/doc/go-pkginstall
          cp README.md LICENSE ./build/usr/share/doc/go-pkginstall/

      - name: Create Debian package
        run: |
          ./pkginstall build \
            --name go-pkginstall \
            --version ${{ steps.get_version.outputs.version }} \
            --maintainer "idk <idk@i2pmail.org>" \
            --description "A replacement for Checkinstall with mildly enhanced security features" \
            --source ./build \
            --verbose

      - name: Upload Debian package artifact
        uses: actions/upload-artifact@v4
        with:
          name: go-pkginstall_${{ steps.get_version.outputs.version }}.deb
          path: go-pkginstall*.deb
          compression-level: 0

      - name: Upload Debian package to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          artifacts: go-pkginstall_*.deb
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true

      - name: Upload Debian package to nightly
        uses: ncipollo/release-action@v1
        with:
          artifacts: go-pkginstall_*.deb
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          tag: nightly
          replacesArtifacts: true
          allowUpdates: true
          makeLatest: true